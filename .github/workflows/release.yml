name: Release Deplyoment

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Release type (alpha or beta)'
        required: true
        default: 'alpha'
      source_branch:
        description: 'Source branch for the release'
        required: true
        default: 'pre-develop'

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Set Git user.name and user.email
        run: |
          git config --global user.name "${{ secrets.GIT_USER_NAME }}"
          git config --global user.email "${{ secrets.GIT_EMAIL }}"

      - name: Extract version from build.gradle.kts
        id: get_version
        run: |
          VERSION_NAME=$(grep "^versionName" app/build.gradle.kts | awk '{ print $2 }' | tr -d '"')
          echo "version_name=$VERSION_NAME" >> $GITHUB_ENV

      - name: Determine target branch
        id: determine_target
        run: |
          if [ "${{ github.event.inputs.release_type }}" == "alpha" ]; then
            echo "target_branch=develop" >> $GITHUB_ENV
          else
            echo "target_branch=main" >> $GITHUB_ENV
          fi

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GIT_TOKEN }}
          branch: ${{ github.event.inputs.source_branch }}
          base: ${{ env.target_branch }}
          title: "${{ github.event.inputs.release_type }} Release: Version ${{ env.version_name }}"
          body: 'This PR is created by GitHub Actions for ${{ github.event.inputs.release_type }} release.'
          labels: ${{ github.event.inputs.release_type }}

      - name: Generate Release Notes
        id: release_notes
        uses: release-drafter/release-drafter@v5
        with:
          config-name: release-drafter.yml

      - name: Add Release Notes to PR Comment
        uses: actions/github-script@v6
        with:
          script: |
            const pr_number = ${{ steps.create_pr.outputs.pull-request-number }};
            const release_notes = `## What's Changed\n${{ steps.release_notes.outputs.changes }}`;
            await github.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr_number,
              body: release_notes
            });
